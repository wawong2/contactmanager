{"version":3,"sources":["context.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","TextInputGroup","_ref","label","name","placeholder","onChange","error","className","htmlFor","classnames","is-invalid","defaultProps","AddContact","email","phone","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","uuid","post","history","push","defineProperty","target","_this2","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Contact","showContactInfo","onDeleteClick","delete","t0","_this$props$contact","style","position","right","fontSize","cursor","flaot","color","onClick","Link","to","top","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","Header","branding","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","Switch","layout_Header","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.016abf74.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT' :\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            }\n\n        case 'ADD_CONTACT' :\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }    \n            \n        case 'UPDATE_CONTACT' :\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            }    \n\n        default: \n            return state;\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [\n           \n        ],\n        dispatch: action => this.setState(state => reducer(state, action))\n        \n    }\n\n    async componentDidMount() {\n        const res = await axios\n            .get('https://jsonplaceholder.typicode.com/users')\n        \n        this.setState({contacts: res.data})\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\nlabel,\nname,\nvalue,\nplaceholder,\ntype,\nonChange,\nerror\n}) => { return (\n    <div className=\"form-group\" >\n        <label htmlFor={name}>{label}</label>\n        <input type={type}\n               name={name} \n               value={value}\n               className={classnames('form-control form-control-lg', {'is-invalid': error})} \n               placeholder={placeholder}\n               onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n    );\n}\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport uuid from 'uuid';\nimport axios from 'axios'\n\nclass AddContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check For Errors\n    if(name === '') {\n      this.setState({errors: {name: 'Name is required'}})\n      return;\n    }\n    if(email === '') {\n      this.setState({errors: {email: 'Email is required'}})\n      return;\n    }\n    if(phone === '') {\n      this.setState({errors: {phone: 'Phone is required'}})\n      return;\n    }\n\n    const newContact = {\n      id: uuid(),\n      name,\n      email,\n      phone\n    }\n    \n    await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n    dispatch({type: 'ADD_CONTACT', payload: newContact})\n\n    //clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    \n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-bdoy m-3\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Add Contact\" \n                         className=\"btn btn-lg \n                                    btn-light \n                                    btn-block mt-5\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>   \n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react'\n\nimport axios from 'axios'\n\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup'\n\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount() {\n\n        const { id } = this.props.match.params\n\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        \n        const contact = res.data\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n        })\n    }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault()\n\n    const { name, email, phone } = this.state;\n\n    //Check For Errors\n    if(name === '') {\n      this.setState({errors: {name: 'Name is required'}})\n      return;\n    }\n    if(email === '') {\n      this.setState({errors: {email: 'Email is required'}})\n      return;\n    }\n    if(phone === '') {\n      this.setState({errors: {phone: 'Phone is required'}})\n      return;\n    }\n\n    const updContact = {\n        name,\n        email,\n        phone\n    }\n\n    const { id } = this.props.match.params\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\n    dispatch({type:'UPDATE_CONTACT', payload: res.data})\n\n    //clear State\n    this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n    this.props.history.push('/');\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    \n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-bdoy m-3\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input type=\"submit\" value=\"Update Contact\" \n                         className=\"btn btn-lg \n                                    btn-light \n                                    btn-block mt-5\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>   \n    );\n  }\n}\n\nexport default EditContact;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            dispatch({type: 'DELETE_CONTACT', payload: id})\n        } catch(e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id})\n        }\n\n    };\n\n    render() {\n    const { id, name, email, phone } = this.props.contact; \n    const { showContactInfo } = this.state;\n\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n\n                return (\n                    <div className=\"card card-body mb-3\">\n                    <i  className=\"fas fa-times\" \n                        style={{\n                            position: 'absolute',\n                            right: '10px',\n                            fontSize: '30px',\n                            cursor: 'pointer', \n                            flaot: 'right', \n                            color: 'red',\n                        }}\n                        onClick = {this.onDeleteClick.bind(this, id, dispatch)}\n                    />\n                    <Link to={`contact/edit/${id}`}>\n                        <i className=\"fas fa-pencil-alt\"\n                           style={{\n                            position: 'absolute',\n                            top: '25px',\n                            right: '50px',\n                            fontSize: '20px',\n                            cursor: 'pointer', \n                            flaot: 'right',\n                            color: 'gray'\n                            }} \n                        />\n                    </Link>\n                    <h4 className=\"text-left\">{name}{'    '}\n                        <i \n                            onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\n                            className=\"fas fa-sort-down\"\n                            style= {{ cursor : 'pointer' }}\n                        />\n                    </h4>\n                    {showContactInfo ? (\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">Email: {email}</li>\n                            <li className=\"list-group-item\">Phone: {phone}</li>\n                        </ul>\n                    ) : null}\n                </div>\n                )\n            }}\n        </Consumer>  \n    );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    deleteContact = id => {\n        const { contacts } = this.state;\n\n        const newContacts = contacts.filter(contact => \n            contact.id !== id);\n\n        this.setState({\n            contacts: newContacts\n        });\n    }\n\n    render() {\n\n        return (\n            <Consumer>\n                {value => {\n\n                    const { contacts } = value;\n\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\">Contact</span> List\n                            </h1>\n                            {contacts.map(contact => \n                                <Contact \n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            )}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nconst Header = props => {\n    const {branding} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\n            <Link to=\"/\" className=\"navbar-brand ml-5\">{branding}</Link>\n            <div className=\"container-fluid\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">\n                            <i className=\"fas fa-home\"></i> Home\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\">\n                             <i className=\"fas fa-plus\"></i> Add\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-question\"></i>  About\n                        </Link>\n                    </li>\n                </ul>    \n            </div>\n        </nav>\n    );\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\n// const headingStyle = {\n//     color: '#565656',\n//     fontSize: '50px'\n// }\n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p>Simple app to manager contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"> <span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => response.json())\n            .then(data => \n                this.setState({\n                    title: data.title,\n                    body: data.body\n                })\n            )\n    }\n\n    // componentWillMount() {\n    //     console.log('componentWillMount...')\n    // }\n\n    // componentDidUpdate() {\n    //     console.log('componentDidUpdate...')\n    // }\n\n    // componentWillUpdate() {\n    //     console.log('componentWillUpdate...')\n    // }\n\n    // componentWillReceiveProps(nextProps, nextState) {\n    //     console.log('componentWillReceiveProps...')\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n    //     return {\n    //         test: 'something'\n    //     }\n    // }\n\n    // static getDerivedStateFromProps(nextProps, prevState) {\n        // console.log('componentWillReceiveProps...')\n    // }\n\n    render() {\n        const { title, body} = this.state;\n        return (\n        <div>\n            <h1>{title}</h1>\n            <p>{body}</p>\n        </div>\n        )\n    }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test'\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n          <Switch>\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/test\" component={Test}/>\n                <Route component={NotFound}/>    \n            </div>\n          </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}